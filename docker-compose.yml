version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dashboard-ac-postgres
    environment:
      POSTGRES_USER: 4dm1n
      POSTGRES_PASSWORD: 4dm1nP@ssw0rd
      POSTGRES_DB: dashboard_ac_dev
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build: .
    container_name: dashboard-ac-api
    env_file:
      - .env.docker
    ports:
      - "8088:8088"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dashboard-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Drizzle Studio (Database Management)
  drizzle-studio:
    image: node:18-alpine
    container_name: dashboard-ac-drizzle-studio
    working_dir: /app
    ports:
      - "4983:4983"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dashboard-network
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://4dm1n:4dm1nP@ssw0rd@postgres:5432/dashboard_ac_dev
    command: >
      sh -c "
        apk add --no-cache git &&
        npm install -g drizzle-kit@latest &&
        mkdir -p /app &&
        cd /app &&
        npm init -y &&
        npm install drizzle-kit drizzle-orm pg &&
        echo 'import { defineConfig } from \"drizzle-kit\";
        export default defineConfig({
          dialect: \"postgresql\",
          dbCredentials: {
            url: process.env.DATABASE_URL,
          },
        });' > drizzle.config.ts &&
        npx drizzle-kit studio --host 0.0.0.0 --port 4983 --verbose
      "
    volumes:
      - drizzle_data:/app

volumes:
  postgres_data:
  drizzle_data:

networks:
  dashboard-network:
    driver: bridge