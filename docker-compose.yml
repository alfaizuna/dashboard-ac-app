version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dashboard-ac-postgres
    environment:
      POSTGRES_USER: 4dm1n
      POSTGRES_PASSWORD: 4dm1nP@ssw0rd
      POSTGRES_DB: dashboard_ac_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build: .
    container_name: dashboard-ac-api
    env_file:
      - .env.docker
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dashboard-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: dashboard-ac-adminer
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - dashboard-network
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres

volumes:
  postgres_data:

networks:
  dashboard-network:
    driver: bridge